<!--
    THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS
    FOR A PARTICULAR PURPOSE. THIS CODE AND INFORMATION ARE NOT SUPPORTED BY XEBIALABS.
-->
<rules
        xmlns="http://www.xebialabs.com/xl-deploy/xl-rules">

    <rule name="puppet.Manifest.CREATE_MODIFY" scope="deployed">
        <conditions>
            <type>puppet.Manifest</type>
            <operation>CREATE</operation>
            <operation>MODIFY</operation>
        </conditions>
        <steps>
            <os-script>
                <description expression="true">"Apply manifest %s on %s " % (deployed.name,deployed.container.name)</description>
                <script>puppet/run-manifest</script>
                <order expression="true">deployed.applyOrder</order>
            </os-script>
        </steps>
    </rule>

    <rule name="puppet.Manifest.NOOP" scope="deployed">
        <conditions>
            <type>puppet.Manifest</type>
            <operation>NOOP</operation>
            <expression>deployed.applyOnNoop</expression>
        </conditions>
        <steps>
            <os-script>
                <description expression="true">"Apply manifest %s on %s " % (deployed.name,deployed.container.name) </description>
                <script>puppet/run-manifest</script>
                <order expression="true">deployed.applyOrder</order>
            </os-script>
        </steps>
    </rule>

    <rule name="puppet.ManifestFolder.CREATE_MODIFY" scope="deployed">
        <conditions>
            <type>puppet.ManifestFolder</type>
            <operation>CREATE</operation>
            <operation>MODIFY</operation>
        </conditions>
        <steps>
            <os-script>
                <description expression="true">"Apply manifest folder %s on %s " % (deployed.name,deployed.container.name)</description>
                <script>puppet/run-manifest-folder</script>
                <order expression="true">deployed.applyOrder</order>
            </os-script>
        </steps>
    </rule>

    <rule name="puppet.ManifestFolder.NOOP" scope="deployed">
        <conditions>
            <type>puppet.ManifestFolder</type>
            <operation>NOOP</operation>
            <expression>deployed.applyOnNoop</expression>
        </conditions>
        <steps>
            <os-script>
                <description expression="true">"Apply manifest folder %s on %s " % (deployed.name,deployed.container.name)</description>
                <script>puppet/run-manifest-folder</script>
                <order expression="true">deployed.applyOrder</order>
            </os-script>
        </steps>
    </rule>

    <rule name="puppet.Module.CREATE_MODIFY" scope="deployed">
        <conditions>
            <type>puppet.Module</type>
            <operation>CREATE</operation>
            <operation>MODIFY</operation>
        </conditions>
        <planning-script-path>puppet/scripts/add-module-install-step.py</planning-script-path>
    </rule>

    <rule name="puppet.Module.MODIFY_DESTROY" scope="deployed">
        <conditions>
            <type>puppet.Module</type>
            <operation>DESTROY</operation>
            <operation>MODIFY</operation>
        </conditions>
        <planning-script-path>puppet/scripts/add-module-uninstall-step.py</planning-script-path>
    </rule>

    <rule name="puppet.TarBallModule.CREATE_MODIFY" scope="deployed">
        <conditions>
            <type>puppet.TarBallModule</type>
            <operation>CREATE</operation>
            <operation>MODIFY</operation>
        </conditions>
        <planning-script-path>puppet/scripts/add-tarball-module-install-step.py</planning-script-path>
    </rule>

    <rule name="puppet.TarBallModule.DESTROY_MODIFY" scope="deployed">
        <conditions>
            <type>puppet.TarBallModule</type>
            <operation>DESTROY</operation>
            <operation>MODIFY</operation>
        </conditions>
        <planning-script-path>puppet/scripts/add-tarball-module-uninstall-step.py</planning-script-path>
    </rule>

</rules>
